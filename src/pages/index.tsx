import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";

import { type RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import Image from "next/image";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const {user} = useUser();

  if(!user) return null;
  
  return (
    <div className="flex gap-3 w-full">
      <Image src={user.profileImageUrl} alt="Profile Image" height={56} width={56} className="w-14 h-14 rounded-full"/>
      <input type="text" placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const {post, author} = props;

  return (
    <div key={post.id} className="p-4 border-b border-slate-400 flex gap-3">
      <Image src={author.profileImageUrl} alt="Profile Image" height={56} width={56} className="w-14 h-14 rounded-full"/>
      <div className="flex flex-col">
        <div className="flex text-slate-300 gap-1 items-center">
          <span>{`@${author.username}`}</span> Â· <span className="text-xs text-slate-500">{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>
          {post.content}
        </span>
      </div>
    </div>
  )

}

const Feed = () => {
  const {data, isLoading: postsLoading} = api.posts.getAll.useQuery()

  if(postsLoading) return <LoadingPage />

  if(!data) return <div>Something went wrong!</div>

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id}/>
      ))}
    </div>
  )


}

const Home: NextPage = () => {
  const {isLoaded: userLoaded, isSignedIn} = useUser();
  
  // Start fetching asap
  api.posts.getAll.useQuery()
  
  //  Return empty div if user isn't loaded yet
  if(!userLoaded) return <div />;
  
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full h-full border-x border-slate-400 md:max-w-2xl"> 
          <div className="border-b border-slate-400 p-4 flex">
            {
              isSignedIn ? (
                <CreatePostWizard />
              ) : (
                <div className="flex justify-center">
                  <SignInButton>
                    <button className="px-3 py-2 font-semibold rounded-full border-2 border-white text-white transition-colors hover:bg-white hover:text-black">Sign In</button>
                  </SignInButton>
                </div>
              )
            }
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
